{
	"name":"listEach",
	"type":"function",
	"syntax":"listEach(String str, UDFMethod function [, String delim, boolean includeEmptyFields]);",
	"returns":"",
	"related":[],
	"description":" Iterates over every element of a List object and can call a UDF function, passed as the second argument.",
	"params": [
		{"name":"str","description":"An input list object.","required":true,"default":"","type":"","values":[]},
        {"name":"function","description":"UDF or closure object.","required":true,"default":"","type":"","values":[]},
        {"name":"delim","description":"A list delimiter to be used. The default value is comma (,).","required":true,"default":"","type":"","values":[]},
        {"name":"includeEmptyFields","description":"Boolean. Whether to allow empty fields. Default is false.","required":false,"default":"","type":"","values":[]}
	],
	"engines": {
		"coldfusion": {"minimum_version":"", "notes":"", "docs":"https://helpx.adobe.com/coldfusion/cfml-reference/coldfusion-functions/functions-l/listeach.html"},
		"lucee": {"minimum_version":"", "notes":"", "docs":"http://docs.lucee.org/reference/functions/listeach.html"},
		"railo": {"minimum_version":"", "notes":"", "docs":"http://railodocs.org/index.cfm/function/ListEach"}
	},
	"links": [

	],
	"examples": [
		{
			"title": "List Loop using listEach",
			"description": "Using a semicolon delimiter.",
			"code": "list = \"a;b;c\";\nlistEach(list, function(element,index,list) {\n    writeOutput(\"#index#:#element#;\");\n}, \";\");",
			"result": "1:a;2:b;3:c;"
		},
		{
			"title": "Member Function Example",
			"description": "List Loop list.Each()",
			"code": "list = \"a;b;c\";\r\nlist.each(function(element,index,list) { \r\n    writeOutput(\"#index#:#element#;\");\r\n}, \";\");",
			"result": "1:a;2:b;3:c;"
		},
		{
			"title": "Example using a Closure",
			"description": "Example 1",
			"code": "<cfscript> \r\n empArray = [\"john\", \"pete\", \"bob\"]; \r\n listS = \"'john', 'pete', 'bob'\"; \r\n arrayEach(empArray, xclosure); \r\n listEach(listS, xclosure); \r\n function xclosure(empname, index) {  \r\n    writeOutput(empName & \" at index: \" & index); \r\n } \r\n</cfscript> \r\n",
			"result": "john at index: 1pete at index: 2bob at index: 3'john' at index: 1 'pete' at index: 2 'bob' at index: 3"
		},
        {
			"title": "Example using a Closure Alternate",
			"description": "Also, the original array can also be passed to the closure function. So the following code is also valid:",
			"code": "... \r\n function xclosure(empname, index, empArray) \r\n { \r\n } \r\n ... \r\n } \r\n </cfscript> \r\n",
			"result": "",
			"runnable":false
		}
        ,
        {
			"title": "Another Closure Example",
			"description": "Example 2",
			"code": "<cfscript> \r\n cityList = \"Pittsburgh, Raleigh, Miami, Las Vegas\"; \r\n function printCity(String city) { \r\n    writeOutput(\"Current city: \" & city); \r\n } \r\n listEach(cityList ,printCity); \r\n</cfscript> \r\n",
			"result": "Current city: PittsburghCurrent city: RaleighCurrent city: MiamiCurrent city: Las Vegas"
		}
	]

}